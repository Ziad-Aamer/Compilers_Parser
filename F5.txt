!!new int[(this.ComputeFac(num-1))*k-o<55][id].length4()

CLASS CLASS class
ID ID Factorial
LEFT_CURLY_B LEFT_CURLY_B {
PUBLIC PUBLIC public
STATIC STATIC static
VOID VOID void
MAIN MAIN main
LEFT_ROUND_B LEFT_ROUND_B (
STRING STRING String
LEFT_SQUARE_B LEFT_SQUARE_B [
RIGHT_SQUARE_B RIGHT_SQUARE_B ]
ID ID a
RIGHT_ROUND_B RIGHT_ROUND_B )
LEFT_CURLY_B LEFT_CURLY_B {
SYSTEM.OUT.PRINTLN LEFT_CURLY_B System.out.println
SYSTEM.OUT.PRINTLN IF System.out.println
SYSTEM.OUT.PRINTLN WHILE System.out.println
SYSTEM.OUT.PRINTLN SYSTEM.OUT.PRINTLN System.out.println
LEFT_ROUND_B LEFT_ROUND_B (
NEW INTEGER_LITERAL new
NEW TRUE new
NEW FALSE new
NEW THIS new
NEW LEFT_ROUND_B new
NEW NEW new
ID INT Fac
ID ID Fac
LEFT_ROUND_B LEFT_ROUND_B (
RIGHT_ROUND_B RIGHT_ROUND_B )
DOT LEFT_SQUARE_B .
DOT DOT .
ID LENGTH ComputeFac
ID ID ComputeFac
LEFT_ROUND_B LEFT_ROUND_B (
INTEGER_LITERAL INTEGER_LITERAL 10
RIGHT_ROUND_B LEFT_SQUARE_B )
RIGHT_ROUND_B DOT )
RIGHT_ROUND_B MULTIPLY )
RIGHT_ROUND_B MINUS )
RIGHT_ROUND_B PLUS )
RIGHT_ROUND_B LESSTHAN )
RIGHT_ROUND_B AND )
RIGHT_ROUND_B COMMA )
RIGHT_ROUND_B RIGHT_ROUND_B )
RIGHT_ROUND_B LEFT_SQUARE_B )
RIGHT_ROUND_B DOT )
RIGHT_ROUND_B MULTIPLY )
RIGHT_ROUND_B MINUS )
RIGHT_ROUND_B PLUS )
RIGHT_ROUND_B LESSTHAN )
RIGHT_ROUND_B AND )
RIGHT_ROUND_B RIGHT_ROUND_B )
SEMICOLON SEMICOLON ;
RIGHT_CURLY_B RIGHT_CURLY_B }
RIGHT_CURLY_B RIGHT_CURLY_B }
CLASS CLASS class
ID ID Fac
LEFT_CURLY_B EXTEND {
LEFT_CURLY_B LEFT_CURLY_B {
ID BOOLEAN Fac
ID CHARACTER Fac
ID STRING Fac
ID FLOAT Fac
ID INT Fac
ID ID Fac
LEFT_ROUND_B PUBLIC (
LEFT_ROUND_B PRIVATE (
LEFT_ROUND_B RIGHT_CURLY_B (
False Syntax
class Factorial{
public static void Main( String[ ]a)
{System.out.println(newFac().ComputeFac(10));
}}
